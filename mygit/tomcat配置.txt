 tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。  tomcat环境变量的配置

1.===> 进入bin目录下，双击startup.bat看是否报错。一般肯定会报。

2.===> 右键我的电脑===>高级===>环境变量   新建一个 变量名为 JAVA_HOME 然后变量值是 你的JDK的bin目录的上一层。 再新建一个 变量名为CATALINA_HOME 变量值是你的Tomcat的bin的目录的上一层。

3.===> 进入Tomcat bin目录下  双击shutdown.bat 然后重复1 的操作。看是否报错。应该不报了。

4.===> 进入apache-tomcat-5.5.12\conf 目录下 找到tomcat-users.xml 然后创建一个用户名密码。

 <user username="admin" password="123" roles="admin,manager"/>

5.===>然后进入Tomcat主目录中conf目录下的server.xml文件，找到其中的Connector port="8080"，并将其更改为Connector port="8088"

jdk+tomcat环境变量配置在blog里记录一下，以备后用。

JDK环境变量配置：

如果你的JDK安装在C盘里，如：C:\j2sdk1.4.2_05，那么就在系统变量里（当然也可以在用户变量里）点新建：

 变量名：JAVA_HOME

变量值：C:\j2sdk1.4.2_05

再次点新建：

 变量名：classpath

变量值：.;%JAVA_HOME%\lib\dt.jar;

并在path里加入 .;%JAVA_HOME%\bin;

那么你的JDK就配置成功了，当然最好是再试验一下是否配置成功，那么就写一个简单的程序验证一下：

Public class Test{

public static void main{

       System.out.println("successful")

}

}

运行代码，如果没问题，那一切OK，有问题，请检查一下上边所写的是否有错。

 Tomcat环境变量配置：

 如果你的Tomcat安装在C盘里，如：F:\Tomcat50（在这里切记一下，安装Tomcat时，在其字母周围一定不要存在空格，否则最后可能导致配置不成功）

同样，在系统变量里点新建：

变量名：CATALINA_BASE

变量值：F:\Tomcat50;

 再次新建：

变量名：CATALINA_HOME

 变量值：F:\Tomcat50;

  点击确定后在classpath中加入%CATALINA_HOME%\common\lib\servlet-api.jar;

  在path中加入%CATALINA_HOME%\bin;

      确定后你的Tomcat就配置好了，同样要验证是否配置成功，那就运行Tomcat,点击启动（或Start service）后，打开浏览器，敲入http://localhost:8080,如果出现页面，那么配置成功。

经常看到许多人问如何配置JDK和JSP，现在我把方法总结下，希望对大家有所帮助。

第一步：下载jdk和tomcat

第二步：安装和配置你的jdk和tomcat：执行jdk和tomcat的安装程序，然后设置按照路径进行安装即可。

1.安装j2sdk以后，需要配置一下环境变量，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的jdk安装在c:\jdk1.6）:

JAVA_HOME=c:\jdk1.6

classpath=. ;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\ lib\tools.jar;（.;一定不能少，因为它代表当前路径)

path=%JAVA_HOME%\bin

接着可以写一个简单的java程序来测试JDK是否已安装成功：

public class Test{

public static void main(String args[]){

System.out.println("This is a test program.");

}

}

将上面的这段程序保存为文件名为Test.java的文件。

然后打开命令提示符窗口，cd到你的Test.java所在目录，然后键入下面的命令 

javac Test.java

java Test 

此时如果看到打印出来This is a test program.的话说明安装成功了，如果没有打印出这句话，你需要仔细检查一下你的配置情况。

2.安装Tomcat后，在我的电脑->属性->高级->环境变量->系统变量中添加以下环境变量(假定你的tomcat安装在c: \Tomcat）：

CATALINA_HOME: C: \Tomcat

CATALINA_BASE: C: \Tomcat

TOMCAT_HOME: C:\Tomcat

然后修改环境变量中的classpath，把tomat安装目录下的common\lib下的servlet.jar追加到classpath中去，修改后的classpath如下：

classpath=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%CATALINA_HOME%\common\lib\servlet.jar;

接着可以启动tomcat，在IE中访问http://localhost:8080，如果看到tomcat的欢迎页面的话说明安装成功了。

第三步：建立自己的jsp app目录

1.到Tomcat的安装目录的webapps目录，可以看到ROOT，examples, tomcat-docs之类Tomcat自带的的目录；

2.在webapps目录下新建一个目录，起名叫myapp；

3.myapp下新建一个目录WEB-INF，注意，目录名称是区分大小写的；

4.WEB-INF下新建一个文件web.xml，内容如下：

<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app

PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"

"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

<display-name>My Web Application</display-name>

<description>

A application for test.

</description>

</web-app>

5.在myapp下新建一个测试的jsp页面，文件名为index.jsp，文件内容如下：

<html><body><center>Now time is: <%=new java.util.Date()%></center></body></html>

6.重启Tomcat

7.打开浏览器，输入http://localhost:8080/myapp/index.jsp 看到当前时间的话说明就成功了。

第四步：建立自己的Servlet：

写入你的第一个Servlet

import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class HelloWorld extends HttpServlet

    {

      public void doGet(HttpServletRequest request,HttpServletResponse response)th

rows ServletException,IOException

     {

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>");

      out.println("This is my first Servlet");

      out.println("</title></head><body>");

      out.println("<h1>Hello,World!</h1>");

      out.println("</body></html>");

     }

     }

     然后照样用javac HelloWorld.java来编译这个文件，如果出现无法import javax.servlet.*

     那么就是应该把C:\Tomcat\common\lib里面的servlet.jar文件拷贝到C:JDKjrelibext中，再次编译，就没有问题了！

     然后在Tomcat目录里面的C:\Tomcat\webapps\ROOT里面按如下的文件结构：

     ROOT\index.html

     ROOT\welcom.jsp

     ROOT\WEB-INF\lib\MyServlet.jar（如果你的servlet的.class打成了.jar文件，则放在lib下面)

     ROOT\WEB-INF\classes\HelloWorld.class(把上面生成的HelloWorld.class文件放在这个里面)

然后在浏览器中输入http://localhost:8080/servlet/HelloWorld,于是Server众望所归的报错了:Error 404--Not Found 怎么回事呢？

Servlet必须使用C:\Tomcat\webapps\ROOT\WEB-INF这个目录下面的web.xml文件进行注册，

用EP打开这个web.xml文件，

把下面这段程序

servlet>

    ..... 

</servlet>

<servlet-mapping>

     ......

</servlet-mapping>

替换成

<servlet>

         <servlet-name>HelloWorld</servlet-name>

      <servlet-class>HelloWorld</servlet-class>

     </servlet>

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

如果没有的话，就直接加那段代码

为什么呢？

因为 这样的结构

     <servlet>

     <servlet-name>HelloWorld</servlet-name>

     <servlet-class>HelloWorld</servlet-class>

</servlet>

表示指定包含的servlet类.

而以下的结构

     <servlet-mapping>

         <servlet-name>HelloWorld</servlet-name>

      <url-pattern>/servlet/HelloWorld</url-pattern>

     </servlet-mapping>

     表示指定HelloServlet应当映射到哪一种URL模式。

     在修改web.xml完毕过后，重新启动Server，然后再输入http://localhost:8080/servlet/HelloWorld，那么偌大一个Hello,World!等着你呢，恭喜你摆平了：）

在JSP文件开头加入下面这条语句可以实现中文名称显示

<%@ page language="java" contentType="text/html; charset=gb2312" %>

修改tomcat目录下conf\server.xml为

port="8080"   maxThreads="150" minSpareThreads="25" maxSpareThreads="75"

enableLookups="false" redirectPort="8443" acceptCount="100"

debug="0" connectionTimeout="20000"

disableUploadTimeout="true" URIEncoding="UTF-8"/>

注意黑体部分是修改的地方，修改之后就可以让TOMCAT支持中文链接了。

上面是完整的配置方法，还可以上tomcat支持中文，其实我空间里都有。 